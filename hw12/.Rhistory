## Imputing NAs using knn
imp <- preProcess(x, method="knnImpute")
x_imp <- predict(imp, x_na)
head(x_imp)
head(x_na)
str(x_imp)
dt_imp <- predict(imp, x_na)
#
alpha <- fit_svmLinear$finalModel@alpha[[1]]
sv <- as.data.frame(x[fit_svmLinear$finalModel@SVindex,]) # the "support vectors"
sv.y <- as.numeric(y[fit_svmLinear$finalModel@SVindex])
w <- (colSums(alpha * sv.y * as.matrix(sv)))[c(15,13)]
b <- fit_svmLinear$finalModel@b
as.matrix(grid[,1:2])
dt_imp$y <- predict(fit_svmLinear, newdata=dt_imp)
dt_imp$y.cont <- (as.matrix(grid[,1:2]) %*% w - b)[,1]
ggplot(dt, aes(V14, V12, col=y)) + geom_point() +
geom_point(data=sv, col="black", size=1, shape=21) +
geom_contour(data=dt_imp, aes(V14,V12,z=y.cont), breaks=c(-4,0,4), col="black") +
geom_raster(data=dt_imp, aes(V14,V12,fill=y), alpha=.2)
w
as.matrix(grid[,1:2])
sv
ggplot(dt, aes(V14, V12, col=y)) + geom_point() +
geom_point(data=sv, col="black", size=1, shape=21) +
geom_contour(data=dt_imp, aes(V14,V12,z=y.cont), breaks=c(-1,0,1), col="black") +
geom_raster(data=dt_imp, aes(V14,V12,fill=y), alpha=.2)
w <- (colSums(alpha * sv.y * as.matrix(sv)))
w
dt_imp
ncol(dt_imp)
ncol(w)
length(w)
dt_imp$y.cont <- (as.matrix(dt_imp[,1:30]) %*% w - b)[,1]
ggplot(dt, aes(V14, V12, col=y)) + geom_point() +
geom_point(data=sv, col="black", size=1, shape=21) +
geom_contour(data=dt_imp, aes(V14,V12,z=y.cont), breaks=c(-1,0,1), col="black") +
geom_raster(data=dt_imp, aes(V14,V12,fill=y), alpha=.2)
ggplot(dt, aes(V14, V12, col=y)) + geom_point() +
geom_point(data=sv, col="black", size=1, shape=21) +
geom_contour(data=dt_imp, aes(V14,V12,z=y.cont), col="black") +
geom_raster(data=dt_imp, aes(V14,V12,fill=y), alpha=.2)
ggplot(dt, aes(V14, V12, col=y)) + geom_point() +
geom_point(data=sv, col="black", size=1, shape=21) +
geom_contour(data=dt_imp, aes(V14,V12,z=y.cont),c(0) col="black") +
geom_raster(data=dt_imp, aes(V14,V12,fill=y), alpha=.2)
ggplot(dt, aes(V14, V12, col=y)) + geom_point() +
geom_point(data=sv, col="black", size=1, shape=21) +
geom_contour(data=dt_imp, aes(V14,V12,z=y.cont), breaks=c(0) col="black") +
geom_raster(data=dt_imp, aes(V14,V12,fill=y), alpha=.2)
ggplot(dt, aes(V14, V12, col=y)) + geom_point() +
geom_point(data=sv, col="black", size=1, shape=21) +
geom_contour(data=dt_imp, aes(V14,V12,z=y.cont), breaks=c(0) col="black") +
geom_raster(data=dt_imp, aes(V14,V12,fill=y), alpha=.2)
ggplot(dt, aes(V14, V12, col=y)) + geom_point() +
geom_point(data=sv, col="black", size=1, shape=21) +
geom_contour(data=dt_imp, aes(V14,V12,z=y.cont), breaks=c(0), col="black") +
geom_raster(data=dt_imp, aes(V14,V12,fill=y), alpha=.2)
rsv <- as.data.frame(x[fit_svmRadial$finalModel@SVindex,])
dt_imp$y <- predict(fit_svmRadial, newdata=dt_imp)
## Imputing NAs using knn
imp <- preProcess(x, method="knnImpute")
dt_imp <- predict(imp, x_na)
dt_imp$y <- predict(fit_svmRadial, newdata=dt_imp)
dt_imp$yy <- as.numeric(dt_imp$y)
ggplot(dt, aes(V14,V12,col=y)) + geom_point() +
geom_point(data=rsv, col="black", size=5, shape=21) +
geom_contour(data=dt_imp, aes(V14,V12,z=yy), breaks=0, col="black") +
geom_raster(data=dt_imp, aes(V14,V12,fill=y), alpha=.2)
ggplot(dt, aes(V14,V12,col=y)) + geom_point() +
geom_point(data=rsv, col="black", size=1, shape=21) +
geom_contour(data=dt_imp, aes(V14,V12,z=yy), breaks=0, col="black") +
geom_raster(data=dt_imp, aes(V14,V12,fill=y), alpha=.2)
dt_imp$yy <- as.numeric(dt_imp$y)
ggplot(dt, aes(V14,V12,col=y)) + geom_point() +
geom_point(data=rsv, col="black", size=1, shape=21) +
geom_contour(data=dt_imp, aes(V14,V12,z=yy), breaks=0, col="black") +
geom_raster(data=dt_imp, aes(V14,V12,fill=y), alpha=.2)
dt_imp$yy
dt_imp$y <- predict(fit_svmRadial, newdata=dt_imp)
dt_imp$y
dt_imp
## Imputing NAs using knn
imp <- preProcess(x, method="knnImpute")
dt_imp <- predict(imp, x_na)
dt_imp
dt_imp$y <- predict(fit_svmRadial, newdata=dt_imp)
dt_imp
dt_imp$yy <- as.numeric(dt_imp$y)
ggplot(dt, aes(V14,V12,col=y)) + geom_point() +
geom_point(data=rsv, col="black", size=1, shape=21) +
geom_contour(data=dt_imp, aes(V14,V12,z=yy), breaks=0, col="black") +
geom_raster(data=dt_imp, aes(V14,V12,fill=y), alpha=.2)
dt_imp
dt_imp$yy <- 2*(as.numeric(dt_imp$y)-1.5)
ggplot(dt, aes(V14,V12,col=y)) + geom_point() +
geom_point(data=rsv, col="black", size=1, shape=21) +
geom_contour(data=dt_imp, aes(V14,V12,z=yy), breaks=0, col="black") +
geom_raster(data=dt_imp, aes(V14,V12,fill=y), alpha=.2)
sv.y <- as.numeric(y[fit_svmLinear$finalModel@SVindex])
sv.y
grid$yy
grid$yy <- 2*(as.numeric(grid$y) - 1.5)
dt_imp$yy <- 2*(as.numeric(dt_imp$y)-1.5)
dt_imp
sv <- as.data.frame(x[fit_svmLinear$finalModel@SVindex,]) # the "support vectors"
sv
sv.y <- as.numeric(y[fit_svmLinear$finalModel@SVindex])
sv.y
# Library set-up
library(readr)
library(caret)
library(RANN)
setwd("D:/Spring_2022_D/BIOS735/hw/hw12")
z <- read_csv("phpKo8OWT.csv")
dim(z)
str(z)
table(z$Class)
y_full <- gsub("\\'","",z$Class)
x_full <- as.data.frame(z[,c(-1,-32)])
set.seed(1)
idx <- c(sample(which(y_full == "0"), sum(y_full == "1")), which(y_full == "1"))
y <- y_full[idx]
x <- as.data.frame(scale(x_full[idx,]))
table(y)
set.seed(1)
tg <- data.frame(C=100)
fit_svmLinear <- train(x, y, method="svmLinear", tuneGrid=tg)
fit_svmLinear$results
set.seed(1)
fit_svmRadial <- train(x, y, method="svmRadial", metric="Kappa", tuneLength = 10)
fit_svmRadial$results
ggplot(fit_svmRadial$results, aes(C, Kappa)) +
geom_point() +
coord_cartesian(xlim=c(0,130), ylim=c(0.8 ,0.9)) +
labs(x= "C", y="Kappa", title="Kappa over C in SVM radial") +
scale_x_continuous(breaks=seq(0, 130, 10)) +
scale_y_continuous(breaks=seq(0.8, 0.9, 0.05))
ggplot(fit_svmRadial$results, aes(C, Kappa)) +
geom_point() +
coord_cartesian(xlim=c(0,130), ylim=c(0.825 ,0.875)) +
labs(x= "C", y="Kappa", title="Kappa over C in SVM radial") +
scale_x_continuous(breaks=seq(0, 130, 10)) +
scale_y_continuous(breaks=seq(0.825, 0.875, 0.05))
ggplot(fit_svmRadial$results, aes(C, Kappa)) +
geom_point() +
coord_cartesian(xlim=c(0,130), ylim=c(0.825 ,0.9)) +
labs(x= "C", y="Kappa", title="Kappa over C in SVM radial") +
scale_x_continuous(breaks=seq(0, 130, 10)) +
scale_y_continuous(breaks=seq(0.825, 0.9, 0.05))
svmLinear_var <- varImp(fit_svmLinear)
svmRadial_var <- varImp(fit_svmRadial)
plot(svmLinear_var, top=5, main="SVM Linear")
plot(svmRadial_var, top=5, main="SVM Radial")
# data frame with y, V14, V12 from y and x
dt <- data.frame(y=factor(y), x)
head(dt)
str(dt)
as.numeric(dt$y)
# Creating data by putting NA for other variables and imputting
## Grid set-up
s <- seq(from=-4, to=4, length=40)
grid <- expand.grid(V14=s, V12=s)
## NA dataframe with V14 and V12
x_na <- data.frame(matrix(NA, nrow=nrow(grid), ncol=ncol(x)))
names(x_na) <- names(x)
x_na$V14 <- grid$V14
x_na$V12 <- grid$V12
## Imputing NAs using knn
imp <- preProcess(x, method="knnImpute")
dt_grid <- predict(imp, x_na)
dt_grid
z <- read_csv("phpKo8OWT.csv")
dim(z)
str(z)
table(z$Class)
y_full <- factor(gsub("\\'","",z$Class))
x_full <- as.data.frame(z[,c(-1,-32)])
set.seed(1)
idx <- c(sample(which(y_full == "0"), sum(y_full == "1")), which(y_full == "1"))
y <- y_full[idx]
x <- as.data.frame(scale(x_full[idx,]))
table(y)
y_full
as.numeric(y_full)
set.seed(1)
tg <- data.frame(C=100)
fit_svmLinear <- train(x, y, method="svmLinear", tuneGrid=tg)
fit_svmLinear$results
set.seed(1)
fit_svmRadial <- train(x, y, method="svmRadial", metric="Kappa", tuneLength = 10)
fit_svmRadial$results
ggplot(fit_svmRadial$results, aes(C, Kappa)) +
geom_point() +
coord_cartesian(xlim=c(0,130), ylim=c(0.825 ,0.9)) +
labs(x= "C", y="Kappa", title="Kappa over C in SVM radial") +
scale_x_continuous(breaks=seq(0, 130, 10)) +
scale_y_continuous(breaks=seq(0.825, 0.9, 0.05))
svmLinear_var <- varImp(fit_svmLinear)
svmRadial_var <- varImp(fit_svmRadial)
plot(svmLinear_var, top=5, main="SVM Linear")
plot(svmRadial_var, top=5, main="SVM Radial")
# data frame with y, V14, V12 from y and x
dt <- data.frame(y=y, x)
# Creating data by putting NA for other variables and imputting
## Grid set-up
s <- seq(from=-4, to=4, length=40)
grid <- expand.grid(V14=s, V12=s)
## NA dataframe with V14 and V12
x_na <- data.frame(matrix(NA, nrow=nrow(grid), ncol=ncol(x)))
names(x_na) <- names(x)
x_na$V14 <- grid$V14
x_na$V12 <- grid$V12
## Imputing NAs using knn
imp <- preProcess(x, method="knnImpute")
dt_grid <- predict(imp, x_na)
sv <- as.data.frame(x[fit_svmLinear$finalModel@SVindex,]) # the "support vectors"
sv.y <- 2*(as.numeric(y[fit_svmLinear$finalModel@SVindex]) - 1.5)
w <- (colSums(alpha * sv.y * as.matrix(sv)))
sv.y
as.numeric(y[fit_svmLinear$finalModel@SVindex]
as.numeric(y[fit_svmLinear$finalModel@SVindex])
y
sv.y
as.numeric(y[fit_svmLinear$finalModel@SVindex])
sv.y <- as.numeric(y[fit_svmLinear$finalModel@SVindex]) - 1
sv.y
w <- (colSums(alpha * sv.y * as.matrix(sv)))
alpha
#
alpha <- fit_svmLinear$finalModel@alpha[[1]]
alpha
w <- (colSums(alpha * sv.y * as.matrix(sv)))
b <- fit_svmLinear$finalModel@b
dt_grid_linear <- dt_grid
dt_grid_linear$y <- predict(fit_svmLinear, newdata=dt_grid)
(as.matrix(dt_grid[,1:30]) %*% w - b)
str(as.matrix(dt_grid[,1:30]) %*% w - b)
ggplot(dt, aes(V14, V12, col=y)) + geom_point() +
geom_point(data=sv, col="black", size=1.5, shape=21) +
geom_contour(data=dt_grid_linear, aes(V14, V12, z=y.cont), breaks=c(0), col="black") +
geom_raster(data=dt_grid_linear, aes(V14, V12, fill=y), alpha=.2)
dt_grid_linear$y.cont <- (as.matrix(dt_grid[,1:30]) %*% w - b)[,1]
ggplot(dt, aes(V14, V12, col=y)) + geom_point() +
geom_point(data=sv, col="black", size=1.5, shape=21) +
geom_contour(data=dt_grid_linear, aes(V14, V12, z=y.cont), breaks=c(0), col="black") +
geom_raster(data=dt_grid_linear, aes(V14, V12, fill=y), alpha=.2)
dt_grid_radial <- dt_grid
rsv <- as.data.frame(x[fit_svmRadial$finalModel@SVindex,])
rsv <- as.data.frame(x[fit_svmRadial$finalModel@SVindex,])
dt_grid_radial$y <- predict(fit_svmRadial, newdata=dt_grid_radial)
dt_grid_radial$y
as.numeric(dt_grid_radial$y)
as.numeric(dt_grid_linear$y)
dt_grid_radial$y
as.numeric(dt_grid_radial$y)
dt_grid_radial$yy <- as.numeric(dt_grid_radial$y) - 1
ggplot(dt, aes(V14, V12, col=y)) + geom_point() +
geom_point(data=rsv, col="black", size=1.5, shape=21) +
geom_contour(data=dt_grid_radial, aes(V14, V12, z=yy), breaks=0, col="black") +
geom_raster(data=dt_grid_radial, aes(V14, V12, fill=y), alpha=.2)
dt_grid_radial
ggplot(dt, aes(V14, V12, col=y)) + geom_point() +
geom_point(data=rsv, col="black", size=1.5, shape=21) +
geom_contour(data=dt_grid_radial, aes(V14, V12, z=yy), breaks=0, col="black") +
geom_raster(data=dt_grid_radial, aes(V14, V12, fill=y), alpha=.2)
all.equal(dt_grid_radial$yy, dt_grid_radial$y)
dt_grid_radial$y
dt_grid_radial$yy
ggplot(dt, aes(V14, V12, col=y)) + geom_point() +
geom_point(data=rsv, col="black", size=1.5, shape=21) +
geom_contour(data=dt_grid_radial, aes(V14, V12, z=yy), breaks=0, col="black") +
geom_raster(data=dt_grid_radial, aes(V14, V12, fill=y), alpha=.2)
setwd("D:/Spring_2022_D/BIOS735/hw/hw12")
z <- read_csv("phpKo8OWT.csv")
dim(z)
str(z)
table(z$Class)
y_full <- factor(gsub("\\'","",z$Class))
x_full <- as.data.frame(z[,c(-1,-32)])
set.seed(1)
idx <- c(sample(which(y_full == "0"), sum(y_full == "1")), which(y_full == "1"))
y <- y_full[idx]
x <- as.data.frame(scale(x_full[idx,]))
set.seed(1)
tg <- data.frame(C=100)
fit_svmLinear <- train(x, y, method="svmLinear", tuneGrid=tg)
fit_svmLinear$results
set.seed(1)
fit_svmRadial <- train(x, y, method="svmRadial", metric="Kappa", tuneLength = 10)
fit_svmRadial$results
ggplot(fit_svmRadial$results, aes(C, Kappa)) +
geom_point() +
coord_cartesian(xlim=c(0,130), ylim=c(0.825 ,0.9)) +
labs(x= "C", y="Kappa", title="Kappa over C in SVM radial") +
scale_x_continuous(breaks=seq(0, 130, 10)) +
scale_y_continuous(breaks=seq(0.825, 0.9, 0.05))
svmLinear_var <- varImp(fit_svmLinear)
svmRadial_var <- varImp(fit_svmRadial)
plot(svmLinear_var, top=5, main="SVM Linear")
plot(svmRadial_var, top=5, main="SVM Radial")
ggplot(fit_svmRadial$results, aes(C, Kappa)) +
geom_point() +
coord_cartesian(xlim=c(0,130), ylim=c(0.825 ,0.9)) +
labs(x= "C", y="Kappa", title="Kappa over C in SVM radial") +
scale_x_continuous(breaks=seq(0, 130, 10)) +
scale_y_continuous(breaks=seq(0.825, 0.9, 0.05))
# data frame with y, V14, V12 from y and x
dt <- data.frame(y=y, x)
# Creating data by putting NA for other variables and imputting
## Grid set-up
s <- seq(from=-4, to=4, length=40)
grid <- expand.grid(V14=s, V12=s)
## NA dataframe with V14 and V12
x_na <- data.frame(matrix(NA, nrow=nrow(grid), ncol=ncol(x)))
names(x_na) <- names(x)
x_na$V14 <- grid$V14
x_na$V12 <- grid$V12
## Imputing NAs using knn
imp <- preProcess(x, method="knnImpute")
dt_grid <- predict(imp, x_na)
#
alpha <- fit_svmLinear$finalModel@alpha[[1]]
sv <- as.data.frame(x[fit_svmLinear$finalModel@SVindex,]) # the "support vectors"
sv.y <- as.numeric(y[fit_svmLinear$finalModel@SVindex]) - 1
w <- (colSums(alpha * sv.y * as.matrix(sv)))
b <- fit_svmLinear$finalModel@b
dt_grid_linear <- dt_grid
dt_grid_linear$y <- predict(fit_svmLinear, newdata=dt_grid)
dt_grid_linear$y.cont <- (as.matrix(dt_grid[,1:30]) %*% w - b)[,1]
ggplot(dt, aes(V14, V12, col=y)) + geom_point() +
geom_point(data=sv, col="black", size=1.5, shape=21) +
geom_contour(data=dt_grid_linear, aes(V14, V12, z=y.cont), breaks=c(0), col="black") +
geom_raster(data=dt_grid_linear, aes(V14, V12, fill=y), alpha=.2)
dt_grid_radial <- dt_grid
rsv <- as.data.frame(x[fit_svmRadial$finalModel@SVindex,])
dt_grid_radial$y <- predict(fit_svmRadial, newdata=dt_grid_radial)
dt_grid_radial$yy <- as.numeric(dt_grid_radial$y) - 1
ggplot(dt, aes(V14, V12, col=y)) + geom_point() +
geom_point(data=rsv, col="black", size=1.5, shape=21) +
geom_contour(data=dt_grid_radial, aes(V14, V12, z=yy), breaks=0, col="black") +
geom_raster(data=dt_grid_radial, aes(V14, V12, fill=y), alpha=.2)
dt_grid_radial
is.na(dt_grid_radial)
sum(is.na(dt_grid_radial))
str(dt_grid_radial)
str(dt_grid_linear)
ggplot(dt, aes(V14, V12, col=y)) +
geom_point() +
geom_point(data=rsv, col="black", size=1.5, shape=21) +
geom_contour(data=dt_grid_radial, aes(V14, V12, z=yy), breaks=0, col="black") +
geom_raster(data=dt_grid_radial, aes(V14, V12, fill=y), alpha=.2)
as.numeric(dt_grid_radial$y)
str(dt_grid_radial)
str(dt_grid_linear)
dt_grid_radial$yy <- 2*(as.numeric(dt_grid_radial$y) - 1.5)
ggplot(dt, aes(V14, V12, col=y)) +
geom_point() +
geom_point(data=rsv, col="black", size=1.5, shape=21) +
geom_contour(data=dt_grid_radial, aes(V14, V12, z=yy), breaks=0, col="black") +
geom_raster(data=dt_grid_radial, aes(V14, V12, fill=y), alpha=.2)
sv.y <- 2*(as.numeric(y[fit_svmLinear$finalModel@SVindex]) - 1.5)
w <- (colSums(alpha * sv.y * as.matrix(sv)))
b <- fit_svmLinear$finalModel@b
dt_grid_linear <- dt_grid
dt_grid_linear$y <- predict(fit_svmLinear, newdata=dt_grid)
dt_grid_linear$y.cont <- (as.matrix(dt_grid[,1:30]) %*% w - b)[,1]
ggplot(dt, aes(V14, V12, col=y)) +
geom_point() +
geom_point(data=sv, col="black", size=1.5, shape=21) +
geom_contour(data=dt_grid_linear, aes(V14, V12, z=y.cont), breaks=c(0), col="black") +
geom_raster(data=dt_grid_linear, aes(V14, V12, fill=y), alpha=.2)
str(dt_grid_radial)
str(dt_grid_linear)
dt_grid_radial$yy
dt_grid_radial$yy <- as.numeric(dt_grid_radial$y) - 1
ggplot(dt, aes(V14, V12, col=y)) +
geom_point() +
geom_point(data=rsv, col="black", size=1.5, shape=21) +
geom_contour(data=dt_grid_radial, aes(V14, V12, z=yy), breaks=0.5, col="black") +
geom_raster(data=dt_grid_radial, aes(V14, V12, fill=y), alpha=.2)
sv.y <- as.numeric(y[fit_svmLinear$finalModel@SVindex]) - 1
w <- (colSums(alpha * sv.y * as.matrix(sv)))
b <- fit_svmLinear$finalModel@b
dt_grid_linear <- dt_grid
dt_grid_linear$y <- predict(fit_svmLinear, newdata=dt_grid)
dt_grid_linear$y.cont <- (as.matrix(dt_grid[,1:30]) %*% w - b)[,1]
ggplot(dt, aes(V14, V12, col=y)) +
geom_point() +
geom_point(data=sv, col="black", size=1.5, shape=21) +
geom_contour(data=dt_grid_linear, aes(V14, V12, z=y.cont), breaks=0.5, col="black") +
geom_raster(data=dt_grid_linear, aes(V14, V12, fill=y), alpha=.2)
ggplot(dt, aes(V14, V12, col=y)) +
geom_point() +
geom_point(data=sv, col="black", size=1.5, shape=21) +
geom_contour(data=dt_grid_linear, aes(V14, V12, z=y.cont), breaks=0.25, col="black") +
geom_raster(data=dt_grid_linear, aes(V14, V12, fill=y), alpha=.2)
ggplot(dt, aes(V14, V12, col=y)) +
geom_point() +
geom_point(data=sv, col="black", size=1.5, shape=21) +
geom_contour(data=dt_grid_linear, aes(V14, V12, z=y.cont), breaks=1, col="black") +
geom_raster(data=dt_grid_linear, aes(V14, V12, fill=y), alpha=.2)
ggplot(dt, aes(V14, V12, col=y)) +
geom_point() +
geom_point(data=sv, col="black", size=1.5, shape=21) +
geom_contour(data=dt_grid_linear, aes(V14, V12, z=y.cont), breaks=0, col="black") +
geom_raster(data=dt_grid_linear, aes(V14, V12, fill=y), alpha=.2)
sv.y
dt_grid_linear$y.cont
sv.y <- 2*(as.numeric(y[fit_svmLinear$finalModel@SVindex]) - 1.5)
w <- (colSums(alpha * sv.y * as.matrix(sv)))
b <- fit_svmLinear$finalModel@b
dt_grid_linear <- dt_grid
dt_grid_linear$y <- predict(fit_svmLinear, newdata=dt_grid)
dt_grid_linear$y.cont <- (as.matrix(dt_grid[,1:30]) %*% w - b)[,1]
dt_grid_linear$y.cont
ggplot(dt, aes(V14, V12, col=y)) +
geom_point() +
geom_point(data=sv, col="black", size=1.5, shape=21) +
geom_contour(data=dt_grid_linear, aes(V14, V12, z=y.cont), breaks=0, col="black") +
geom_raster(data=dt_grid_linear, aes(V14, V12, fill=y), alpha=.2)
dt_grid_radial$yy <- 2*(as.numeric(dt_grid_radial$y) - 1.5)
str(dt_grid_radial)
str(dt_grid_linear)
as.numeric(dt_grid_radial$y)
dt_grid_radial$yy
ggplot(dt, aes(V14, V12, col=y)) +
geom_point() +
geom_point(data=rsv, col="black", size=1.5, shape=21) +
geom_contour(data=dt_grid_radial, aes(V14, V12, z=yy), breaks=0.5, col="black") +
geom_raster(data=dt_grid_radial, aes(V14, V12, fill=y), alpha=.2)
ggplot(dt, aes(V14, V12, col=y)) +
geom_point() +
geom_point(data=rsv, col="black", size=1.5, shape=21) +
geom_contour(data=dt_grid_radial, aes(V14, V12, z=yy), breaks=0, col="black") +
geom_raster(data=dt_grid_radial, aes(V14, V12, fill=y), alpha=.2)
setwd("D:/Spring_2022_D/BIOS735/hw/hw12")
z <- read_csv("phpKo8OWT.csv")
y_full <- factor(gsub("\\'","",z$Class))
x_full <- as.data.frame(z[,c(-1,-32)])
table(z$Class)
set.seed(1)
idx <- c(sample(which(y_full == "0"), sum(y_full == "1")), which(y_full == "1"))
y <- y_full[idx]
x <- as.data.frame(scale(x_full[idx,]))
table(y)
set.seed(1)
tg <- data.frame(C=100)
fit_svmLinear <- train(x, y, method="svmLinear", tuneGrid=tg)
fit_svmLinear$results
set.seed(1)
fit_svmRadial <- train(x, y, method="svmRadial", metric="Kappa", tuneLength = 10)
fit_svmRadial$results
ggplot(fit_svmRadial$results, aes(C, Kappa)) +
geom_point() +
coord_cartesian(xlim=c(0,130), ylim=c(0.825 ,0.9)) +
labs(x= "C", y="Kappa", title="Kappa over C in SVM radial") +
scale_x_continuous(breaks=seq(0, 130, 10)) +
scale_y_continuous(breaks=seq(0.825, 0.9, 0.05))
# SVM Radial with C=
fit_svmRadial
svmLinear_var <- varImp(fit_svmLinear)
svmRadial_var <- varImp(fit_svmRadial)
plot(svmLinear_var, top=5, main="SVM Linear")
plot(svmRadial_var, top=5, main="SVM Radial")
svmLinear_var
# data frame with y, V14, V12 from y and x
dt <- data.frame(y=y, x)
# Creating data by putting NA for other variables and imputting
## Grid set-up
s <- seq(from=-4, to=4, length=40)
grid <- expand.grid(V14=s, V12=s)
## NA dataframe with V14 and V12
x_na <- data.frame(matrix(NA, nrow=nrow(grid), ncol=ncol(x)))
names(x_na) <- names(x)
x_na$V14 <- grid$V14
x_na$V12 <- grid$V12
## Imputing NAs using knn
imp <- preProcess(x, method="knnImpute")
dt_grid <- predict(imp, x_na)
## Imputing NAs using knn
imp <- preProcess(x, method="knnImpute")
dt_grid <- predict(imp, x_na)
### 2. Linear basis function SVM
```{r}
#
alpha <- fit_svmLinear$finalModel@alpha[[1]]
sv <- as.data.frame(x[fit_svmLinear$finalModel@SVindex,]) # the "support vectors"
sv.y <- 2*(as.numeric(y[fit_svmLinear$finalModel@SVindex]) - 1.5)
w <- (colSums(alpha * sv.y * as.matrix(sv)))
b <- fit_svmLinear$finalModel@b
dt_grid_linear <- dt_grid
dt_grid_linear$y <- predict(fit_svmLinear, newdata=dt_grid)
dt_grid_linear$y.cont <- (as.matrix(dt_grid[,1:30]) %*% w - b)[,1]
dt_grid_linear$y.cont
ggplot(dt, aes(V14, V12, col=y)) +
geom_point() +
geom_point(data=sv, col="black", size=1.5, shape=21) +
geom_contour(data=dt_grid_linear, aes(V14, V12, z=y.cont), breaks=0, col="black") +
geom_raster(data=dt_grid_linear, aes(V14, V12, fill=y), alpha=.2)
# data for grid
rsv <- as.data.frame(x[fit_svmRadial$finalModel@SVindex,])
#Predicting
dt_grid_radial <- dt_grid
dt_grid_radial$y <- predict(fit_svmRadial, newdata=dt_grid_radial)
dt_grid_radial$yy <- 2*(as.numeric(dt_grid_radial$y) - 1.5)
# Plotting
ggplot(dt, aes(V14, V12, col=y)) +
geom_point() +
geom_point(data=rsv, col="black", size=1.5, shape=21) +
geom_contour(data=dt_grid_radial, aes(V14, V12, z=yy), breaks=0, col="black") +
geom_raster(data=dt_grid_radial, aes(V14, V12, fill=y), alpha=.2)
